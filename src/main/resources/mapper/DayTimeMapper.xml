<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ccx.time.mapper.DayTimeMapper" >
  <resultMap id="BaseResultMap" type="com.ccx.common.entity.DayTime" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="time_id" property="timeId" jdbcType="BIGINT" />
    <result column="day" property="day" jdbcType="DATE" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="over_time" property="overTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="day_total_time" property="dayTotalTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    time_id, day, start_time, over_time, user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ccx.common.entity.DayTimeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from day_time
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from day_time
    where time_id = #{timeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from day_time
    where time_id = #{timeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ccx.common.entity.DayTimeExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from day_time
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ccx.common.entity.DayTime" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into day_time (time_id, day, start_time, 
      over_time, user_id)
    values (#{timeId,jdbcType=BIGINT}, #{day,jdbcType=DATE}, #{startTime,jdbcType=TIMESTAMP}, 
      #{overTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ccx.common.entity.DayTime" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into day_time
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="timeId != null" >
        time_id,
      </if>
      <if test="day != null" >
        day,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="overTime != null" >
        over_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="timeId != null" >
        #{timeId,jdbcType=BIGINT},
      </if>
      <if test="day != null" >
        #{day,jdbcType=DATE},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="overTime != null" >
        #{overTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ccx.common.entity.DayTimeExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from day_time
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="queryTimeOfDay" resultMap="BaseResultMap">
    SELECT day,
    ROUND(SUM(timestampdiff(SECOND ,start_time, over_time) / 3600), 2) AS day_total_time
    FROM DAY_TIME
    <where>
      <if test="dayTime != null and dayTime.day != null and dayTime.day != ''">
        and day = #{dayTime.day}
      </if>
      <if test="userId != null and userId != ''">
        and user_id = #{userId}
      </if>
    </where>
    GROUP BY USER_ID,DAY
  </select>
    <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update day_time
    <set >
      <if test="record.timeId != null" >
        time_id = #{record.timeId,jdbcType=BIGINT},
      </if>
      <if test="record.day != null" >
        day = #{record.day,jdbcType=DATE},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.overTime != null" >
        over_time = #{record.overTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update day_time
    set time_id = #{record.timeId,jdbcType=BIGINT},
      day = #{record.day,jdbcType=DATE},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      over_time = #{record.overTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ccx.common.entity.DayTime" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update day_time
    <set >
      <if test="day != null" >
        day = #{day,jdbcType=DATE},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="overTime != null" >
        over_time = #{overTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
    </set>
    where time_id = #{timeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ccx.common.entity.DayTime" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update day_time
    set day = #{day,jdbcType=DATE},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      over_time = #{overTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER}
    where time_id = #{timeId,jdbcType=BIGINT}
  </update>


  <insert id="insertSelectivePrimary">
    <selectKey keyProperty="timeId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into day_time
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="day != null">
        day,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="overTime != null">
        over_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="day != null">
        #{day},
      </if>
      <if test="startTime != null">
        #{startTime},
      </if>
      <if test="overTime != null">
        #{overTime},
      </if>
      <if test="userId != null">
        #{userId},
      </if>
    </trim>

  </insert>
</mapper>